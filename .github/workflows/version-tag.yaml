# This Version Release is for Temporary Taging in Github. later implement this in deploy.yaml conf 
name: Tag New Version

on:
  push:
    branches:
      - main

jobs:
  push-new-version-tag:
    name: "Tagging New Version On Github"
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up version tagging
        id: tag-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "::group::Other Version tags"
          git fetch --tags
          git tag
          echo "::endgroup::"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}

          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
                echo "version_changed=true" >> $GITHUB_OUTPUT
                echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
                echo "Version changed from $LATEST_VERSION to $CURRENT_VERSION"
          else
                echo "version_changed=false" >> $GITHUB_OUTPUT
                echo "No version change"
          fi

      - name: Push New Version Tag To Github
        if: steps.tag-version.outputs.version_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a "v${{steps.tag-version.outputs.new_version}}" -m "Release v${{steps.tag-version.outputs.new_version}}"
          git push origin "v${{steps.tag-version.outputs.new_version}}"


          
          
