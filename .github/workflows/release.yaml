name: Build & Push - Docker Images

on:
  push:
    branches:
      - main
      - dev

env:
  # Branch
  NEXT_PUBLIC_BRANCH: ${{ vars.NEXT_PUBLIC_BRANCH }}
  # Docker
  DOCKER_ACCESS_TOKEN: ${{secrets.DOCKER_ACCESS_TOKEN}}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  # Turbo
  TURBO_TEAM: ${{secrets.TURBO_TEAM}}
  TURBO_TOKEN: ${{secrets.TURBO_TOKEN}}
  # Algolia
  NEXT_PUBLIC_ALGOLIA_APPLICATION_ID: ${{ vars.NEXT_PUBLIC_ALGOLIA_APPLICATION_ID }}
  NEXT_PUBLIC_ALGOLIA_SEARCH_API: ${{ vars.NEXT_PUBLIC_ALGOLIA_SEARCH_API }}
  NEXT_ALGOLIA_WRITE_API: ${{ secrets.NEXT_ALGOLIA_WRITE_API }}
  # Github
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  # Database
  MONGO_URI: ${{ secrets.MONGO_URI }}
  # PLATFORMS
  BUILDX_PLATFORMS: linux/amd64, linux/arm64

jobs:
  fluctux-web:
    name: "Build & Push Web Docker Image"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    env:
      # Base URI
      NEXT_PUBLIC_API_BASE_URI: ${{ vars.NEXT_PUBLIC_API_BASE_URI }}
      # NextAuth
      AUTHJS_SECRET: ${{ secrets.AUTHJS_SECRET }}
      # Github
      GH_RAW_CONTENT_API: ${{ vars.GH_RAW_CONTENT_API }}
      GH_AUTH_DOC_API: ${{ vars.GH_AUTH_DOC_API }}
      # Arcjet
      ARCJET_KEY: ${{ secrets.ARCJET_KEY }}

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/fluctux-web

      - name: Checkout Fluctux Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/web/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.DOCKER_USERNAME }}/fluctux-web
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          build-args: |
            MONGO_URI=${MONGO_URI} 
            NEXT_PUBLIC_API_BASE_URI=${NEXT_PUBLIC_API_BASE_URI} 
            AUTHJS_SECRET=${AUTHJS_SECRET} 
            NEXT_PUBLIC_ALGOLIA_APPLICATION_ID=${NEXT_PUBLIC_ALGOLIA_APPLICATION_ID} 
            NEXT_PUBLIC_ALGOLIA_SEARCH_API=${NEXT_PUBLIC_ALGOLIA_SEARCH_API} 
            NEXT_ALGOLIA_WRITE_API=${NEXT_ALGOLIA_WRITE_API} 
            ARCJET_KEY=${ARCJET_KEY} 
            GH_TOKEN=${GH_TOKEN} 
            GH_RAW_CONTENT_API=${GH_RAW_CONTENT_API} 
            GH_AUTH_DOC_API=${GH_AUTH_DOC_API} 
            NEXT_PUBLIC_BRANCH=${NEXT_PUBLIC_BRANCH}
            TURBO_TEAM=${TURBO_TEAM} 
            TURBO_TOKEN=${TURBO_TOKEN}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  
  merge:
    runs-on: ubuntu-latest
    needs:
      - fluctux-web
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/fluctux-web
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKER_USERNAME }}/fluctux-web@sha256:%s ' *)

  fluctux-main:
    name: "Build & Push Main Docker Image"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Fluctux repository
        uses: actions/checkout@v4

      - name: Build Fluctux Main Image
        run: |
          docker build -t ${DOCKER_USERNAME}/fluctux-main:latest \
            --build-arg NEXT_PUBLIC_BRANCH=${NEXT_PUBLIC_BRANCH} \
            --build-arg TURBO_TEAM=${TURBO_TEAM} \
            --build-arg TURBO_TOKEN=${TURBO_TOKEN} \
            -f apps/main/Dockerfile .
      - name: Push Fluctux Main Image
        run: |
          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_ACCESS_TOKEN}
          docker push ${DOCKER_USERNAME}/fluctux-main:latest

  fluctux-admin:
    name: "Build & Push Admin Docker Image"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Fluctux repository
        uses: actions/checkout@v4

      - name: Build Fluctux Admin Image
        run: |
          docker build -t ${DOCKER_USERNAME}/fluctux-admin:latest \
            --build-arg NEXT_PUBLIC_BRANCH=${NEXT_PUBLIC_BRANCH} \
            --build-arg TURBO_TEAM=${TURBO_TEAM} \
            --build-arg TURBO_TOKEN=${TURBO_TOKEN} \
            -f apps/admin/Dockerfile .
      - name: Push Fluctux Admin Image
        run: |
          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_ACCESS_TOKEN}
          docker push ${DOCKER_USERNAME}/fluctux-admin:latest

  fluctux-backend:
    name: "Build & Push Backend Docker Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Fluctux repository
        uses: actions/checkout@v4

  nginx:
    name: "Build & Push Nginx Docker Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Fluctux repository
        uses: actions/checkout@v4
