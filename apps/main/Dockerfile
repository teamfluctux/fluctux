# syntax=docker.io/docker/dockerfile:1

FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
RUN \
  if [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# app url
ARG NEXT_PUBLIC_API_BASE_URI

# database uri
ARG MONGO_URI

# github credentials
ARG GITHUB_ID
ARG GITHUB_SECRET

# google credentials
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET

# discord credentials
ARG DISCORD_CLIENT_ID
ARG DISCORD_CLIENT_SECRET

# nextAuth secret
ARG AUTHJS_SECRET

# resend api key for email
ARG RESEND_API_KEY

# arcjet validation
ARG ARCJET_KEY

# algolia apis
ARG NEXT_PUBLIC_ALGOLIA_APPLICATION_ID
ARG NEXT_PUBLIC_ALGOLIA_SEARCH_API
ARG ALGOLIA_WRITE_API

# Github Token
ARG GH_TOKEN
ARG GH_RAW_CONTENT_API
ARG GH_AUTH_DOC_API

# JWT
ARG JWT_SECRET_GRAPHQL

# Branch
ARG NEXT_PUBLIC_BRANCH

RUN \
  if [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000
ENV PORT=3000

# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/config/next-config-js/output
ARG HOSTNAME
CMD ["node", "server.js"]